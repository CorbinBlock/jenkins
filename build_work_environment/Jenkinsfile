pipeline {
    agent none
    stages {
        stage('build_work_laptop') {
            agent {
                label 'windows-02-work'
            }
            steps {
                pwsh("""
                # dbeaver - must install manually to accept prompt
                # winget install 9PNKDR50694P -h #dbeaver

                # winget install AdoptOpenJDK.OpenJDK.11 -h
                # winget install Apple.iTunes -h
                # winget install Adobe.Acrobat.Reader.64-bit -h
                # winget install Amazon.AWSCLI -h
                # winget install DominikReichl.KeePass -h
                # winget install Git.Git -h
                # winget install Google.Chrome -h
                # winget install Microsoft.SQLServerManagementStudio -h
                # winget install Microsoft.VisualStudioCode -h
                # winget install Notepad++.Notepad++ -h
                # winget install Python.Python.3 -h
                # winget install TheGroovyTeam.Groovy -h
                # winget install WinDirStat -h

                # Get-NetIPAddress | Format-Table

                # Install-Module -Force Microsoft.PowerShell.SecretManagement
                # Install-Module -Force Microsoft.PowerShell.SecretStore
                # Install-Module -Force -Name SecretManagement.KeePass -RequiredVersion 0.9.2

                New-Item -ItemType Directory -Force -Path /git/docker
                New-Item -ItemType Directory -Force -Path /git/jenkins
                New-Item -ItemType Directory -Force -Path /git/powershell
                New-Item -ItemType Directory -Force -Path /git/python

                cd /git

                git clone https://github.com/CorbinBlock/docker.git || (cd /git/docker && git pull --no-rebase)
                git clone https://github.com/CorbinBlock/jenkins.git || (cd /git/jenkins && git pull --no-rebase)
                git clone https://github.com/CorbinBlock/powershell.git || (cd /git/powershell && git pull --no-rebase)
                git clone https://github.com/CorbinBlock/python.git || (cd /git/python && git pull --no-rebase)
                
                cd /git/powershell_internal/util_powershell
                
                pscp.exe -pw \$env:FEDORA root@devenvrhel.ddns.net:/tmp/debian_dev_env.tar.gz /wslsources
                
                Get-ChildItem /wslsources
            
                # TODO - Replace with Podman
                # "/Program Files/Docker/Docker/Docker Desktop.exe"            
                # cd /wslsources
                # docker container rm debian_dev_env -f
                # docker builder prune -a -f
                # docker system prune --all --force --volumes
                # docker load --input debian_dev_env.tar.gz
                # docker run -d -p 5000:5000 -t --name debian_dev_env debian_dev_env
                
                # dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart
                # dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
                # Invoke-WebRequest -Uri "https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" -Outfile /tmp/wsl_update_x64.msi
                # msiexec.exe /I /tmp/wsl_update_x64.msi /quiet 
                # wsl --set-default-version 2
                # wsl --unregister debian_dev_env
                # wsl --import debian_dev_env /wslsources/debian_dev_env /wslsources/debian_dev_env.tar.gz
                
                wsl --list
                # wsl --unregister Debian
                # winget uninstall TheDebianProject.DebianGNULinux_76v4gfsz19hv4 -h
                # winget install Debian.debian -h
                # start-process debian
                
                # bash -c 'rm -f /etc/wsl.conf'
                # bash -c 'echo "[user]" >> /etc/wsl.conf'
                # bash -c 'echo "default=root" >> /etc/wsl.conf'
                # wsl --shutdown

                # wsl --set-default Debian
                # wsl --list
                bash -c "apt-get update && apt-get upgrade -y; apt-get install vim git git-lfs python3 python3-pip python3-venv openjdk-11-jdk curl -y"
                """)

            }
        }
    }
}
