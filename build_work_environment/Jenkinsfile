pipeline {
    agent none
    stages {
        stage('build_work_laptop') {
            agent {
                label 'windows-02-work'
            }
            steps {
                pwsh("""
                # dbeaver - must install manually to accept prompt
                # winget install 9PNKDR50694P -h #dbeaver

                # winget install AdoptOpenJDK.OpenJDK.11 -h
                # winget install Apple.iTunes -h
                # winget install Adobe.Acrobat.Reader.64-bit -h
                # winget install Amazon.AWSCLI -h
                # winget install Cockos.Reaper -h
                # winget install Docker.DockerDesktop -h
                # winget install DominikReichl.KeePass -h
                # winget install Fedora.FedoraMediaWriter -h
                # winget install Git.Git -h
                # winget install Google.Chrome -h
                # winget uninstall 'Azure Data Studio' -h
                # winget install Microsoft.SQLServerManagementStudio -h
                # winget install Microsoft.VisualStudioCode -h
                # winget install Notepad++.Notepad++ -h
                # winget install Python.Python.3 -h
                # winget install RaspberryPiFoundation.RaspberryPiImager -h
                # winget install TheGroovyTeam.Groovy -h
                # winget install Valve.Steam -h
                # winget install WinDirStat -h

                # Get-NetIPAddress | Format-Table

                # Install-Module -Force Microsoft.PowerShell.SecretManagement
                # Install-Module -Force Microsoft.PowerShell.SecretStore
                # Install-Module -Force -Name SecretManagement.KeePass -RequiredVersion 0.9.2

                # New-Item -ItemType Directory -Force -Path /git/docker
                # New-Item -ItemType Directory -Force -Path /git/powershell
                # New-Item -ItemType Directory -Force -Path /git/python

                cd /git

                # git clone https://github.com/CorbinBlock/docker
                # git clone https://github.com/CorbinBlock/powershell
                # git clone https://github.com/CorbinBlock/python

                bash -c "cd docker; git init; git pull --no-rebase; cd .."
                bash -c "cd powershell; git init; git pull --no-rebase; cd .."
                bash -c "cd python; git init; git pull --no-rebase; cd .."
                 
                pscp.exe -pw \$env:FEDORA root@devenvrhel.ddns.net:/tmp/debian_dev_env.tar.gz /tmp/
                
                cd /tmp
                docker container rm debian_dev_env -f
                docker builder prune -a -f
                docker system prune --all --force --volumes
                docker load --input debian_dev_env.tar.gz
                docker run -d -p 5000:5000 -t --name debian_dev_env debian_dev_env
                
                wsl --list
                wsl --unregister debian_dev_env
                wsl --import debian_dev_env ./debian_dev_env /wslsources/debian_dev_env.tar.gz
                wsl --set-default debian_dev_env
                wsl --list

                """)
        
            }        
        }    
    }
}
